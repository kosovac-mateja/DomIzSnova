{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./korisnik.service\";\nexport class KlijentService {\n  constructor(http, korisnikServis) {\n    this.http = http;\n    this.korisnikServis = korisnikServis;\n    this.url = 'http://localhost:4000';\n  }\n\n  provera(klijent) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (klijent.korisnickoIme == '') {\n        return 'Korisnicko ime je obavezno polje';\n      }\n\n      if ((yield _this.korisnikServis.korisnikPostoji(klijent.korisnickoIme)) == true) {\n        return 'Korisnicko ime vec postoji';\n      }\n\n      if (klijent.lozinka == '') {\n        return 'Lozinka je obavezno polje';\n      }\n\n      let provera = _this.korisnikServis.proveraLozinke(klijent.lozinka);\n\n      if (provera != 'ok') {\n        return provera;\n      }\n\n      if (klijent.telefon == '') {\n        return 'Telefon je obavezno polje';\n      }\n\n      if (klijent.mejl == '') {\n        return 'Mejl je obavezno polje';\n      }\n\n      if (klijent.ime == '') {\n        return 'Ime je obavezno polje';\n      }\n\n      if (klijent.prezime == '') {\n        return 'Prezime je obavezno polje';\n      }\n\n      return 'ok';\n    })();\n  }\n\n  registracija(klijent) {\n    const podaci = {\n      korisnickoIme: klijent.korisnickoIme,\n      telefon: klijent.telefon,\n      mejl: klijent.mejl,\n      slika: klijent.slika,\n      ime: klijent.ime,\n      prezime: klijent.prezime\n    };\n    return this.http.post(`${this.url}/klijent/registracija`, podaci);\n  }\n\n  azurirajPodatak(korisnickoIme, podatak, vrednost) {\n    return this.http.post(`${this.url}/klijent/azurirajPodatak`, {\n      korisnickoIme: korisnickoIme,\n      podatak: podatak,\n      vrednost: vrednost\n    });\n  }\n\n  azurirajKlijenta(korisnickoIme, telefon, mejl, slika, ime, prezime) {\n    return this.http.post(`${this.url}/klijent/azurirajKlijenta`, {\n      korisnickoIme: korisnickoIme,\n      telefon: telefon,\n      mejl: mejl,\n      slika: slika,\n      ime: ime,\n      prezime: prezime\n    });\n  }\n\n}\n\nKlijentService.ɵfac = function KlijentService_Factory(t) {\n  return new (t || KlijentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.KorisnikService));\n};\n\nKlijentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KlijentService,\n  factory: KlijentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,cAAP,CAAqB;EACzBC,YACUC,IADV,EAEUC,cAFV,EAEyC;IAD/B;IACA;IAGV,WAAM,uBAAN;EAFI;;EAIEC,OAAO,CAACC,OAAD,EAAQ;IAAA;;IAAA;MACnB,IAAIA,OAAO,CAACC,aAAR,IAAyB,EAA7B,EAAiC;QAC/B,OAAO,kCAAP;MACD;;MACD,IACE,OAAO,KAAI,CAACH,cAAL,CAAoBI,eAApB,CAAoCF,OAAO,CAACC,aAA5C,CAAP,KAAsE,IADxE,EAEE;QACA,OAAO,4BAAP;MACD;;MACD,IAAID,OAAO,CAACG,OAAR,IAAmB,EAAvB,EAA2B;QACzB,OAAO,2BAAP;MACD;;MACD,IAAIJ,OAAO,GAAG,KAAI,CAACD,cAAL,CAAoBM,cAApB,CAAmCJ,OAAO,CAACG,OAA3C,CAAd;;MACA,IAAIJ,OAAO,IAAI,IAAf,EAAqB;QACnB,OAAOA,OAAP;MACD;;MACD,IAAIC,OAAO,CAACK,OAAR,IAAmB,EAAvB,EAA2B;QACzB,OAAO,2BAAP;MACD;;MACD,IAAIL,OAAO,CAACM,IAAR,IAAgB,EAApB,EAAwB;QACtB,OAAO,wBAAP;MACD;;MACD,IAAIN,OAAO,CAACO,GAAR,IAAe,EAAnB,EAAuB;QACrB,OAAO,uBAAP;MACD;;MACD,IAAIP,OAAO,CAACQ,OAAR,IAAmB,EAAvB,EAA2B;QACzB,OAAO,2BAAP;MACD;;MAED,OAAO,IAAP;IA7BmB;EA8BpB;;EAEDC,YAAY,CAACT,OAAD,EAAQ;IAClB,MAAMU,MAAM,GAAG;MACbT,aAAa,EAAED,OAAO,CAACC,aADV;MAEbI,OAAO,EAAEL,OAAO,CAACK,OAFJ;MAGbC,IAAI,EAAEN,OAAO,CAACM,IAHD;MAIbK,KAAK,EAAEX,OAAO,CAACW,KAJF;MAKbJ,GAAG,EAAEP,OAAO,CAACO,GALA;MAMbC,OAAO,EAAER,OAAO,CAACQ;IANJ,CAAf;IAQA,OAAO,KAAKX,IAAL,CAAUe,IAAV,CAAe,GAAG,KAAKC,GAAG,uBAA1B,EAAmDH,MAAnD,CAAP;EACD;;EAEDI,eAAe,CAACb,aAAD,EAAgBc,OAAhB,EAAyBC,QAAzB,EAAiC;IAC9C,OAAO,KAAKnB,IAAL,CAAUe,IAAV,CAAe,GAAG,KAAKC,GAAG,0BAA1B,EAAsD;MAC3DZ,aAAa,EAAEA,aAD4C;MAE3Dc,OAAO,EAAEA,OAFkD;MAG3DC,QAAQ,EAAEA;IAHiD,CAAtD,CAAP;EAKD;;EAEDC,gBAAgB,CAAChB,aAAD,EAAgBI,OAAhB,EAAyBC,IAAzB,EAA+BK,KAA/B,EAAsCJ,GAAtC,EAA2CC,OAA3C,EAAkD;IAChE,OAAO,KAAKX,IAAL,CAAUe,IAAV,CAAe,GAAG,KAAKC,GAAG,2BAA1B,EAAuD;MAC5DZ,aAAa,EAAEA,aAD6C;MAE5DI,OAAO,EAAEA,OAFmD;MAG5DC,IAAI,EAAEA,IAHsD;MAI5DK,KAAK,EAAEA,KAJqD;MAK5DJ,GAAG,EAAEA,GALuD;MAM5DC,OAAO,EAAEA;IANmD,CAAvD,CAAP;EAQD;;AArEwB;;;mBAAdb,gBAAcuB;AAAA;;;SAAdvB;EAAcwB,SAAdxB,cAAc;EAAAyB,YAFb","names":["KlijentService","constructor","http","korisnikServis","provera","klijent","korisnickoIme","korisnikPostoji","lozinka","proveraLozinke","telefon","mejl","ime","prezime","registracija","podaci","slika","post","url","azurirajPodatak","podatak","vrednost","azurirajKlijenta","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\services\\klijent.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { KorisnikService } from './korisnik.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KlijentService {\n  constructor(\n    private http: HttpClient,\n    private korisnikServis: KorisnikService\n  ) {}\n\n  url = 'http://localhost:4000';\n\n  async provera(klijent) {\n    if (klijent.korisnickoIme == '') {\n      return 'Korisnicko ime je obavezno polje';\n    }\n    if (\n      (await this.korisnikServis.korisnikPostoji(klijent.korisnickoIme)) == true\n    ) {\n      return 'Korisnicko ime vec postoji';\n    }\n    if (klijent.lozinka == '') {\n      return 'Lozinka je obavezno polje';\n    }\n    let provera = this.korisnikServis.proveraLozinke(klijent.lozinka);\n    if (provera != 'ok') {\n      return provera;\n    }\n    if (klijent.telefon == '') {\n      return 'Telefon je obavezno polje';\n    }\n    if (klijent.mejl == '') {\n      return 'Mejl je obavezno polje';\n    }\n    if (klijent.ime == '') {\n      return 'Ime je obavezno polje';\n    }\n    if (klijent.prezime == '') {\n      return 'Prezime je obavezno polje';\n    }\n\n    return 'ok';\n  }\n\n  registracija(klijent) {\n    const podaci = {\n      korisnickoIme: klijent.korisnickoIme,\n      telefon: klijent.telefon,\n      mejl: klijent.mejl,\n      slika: klijent.slika,\n      ime: klijent.ime,\n      prezime: klijent.prezime,\n    };\n    return this.http.post(`${this.url}/klijent/registracija`, podaci);\n  }\n\n  azurirajPodatak(korisnickoIme, podatak, vrednost) {\n    return this.http.post(`${this.url}/klijent/azurirajPodatak`, {\n      korisnickoIme: korisnickoIme,\n      podatak: podatak,\n      vrednost: vrednost,\n    });\n  }\n\n  azurirajKlijenta(korisnickoIme, telefon, mejl, slika, ime, prezime) {\n    return this.http.post(`${this.url}/klijent/azurirajKlijenta`, {\n      korisnickoIme: korisnickoIme,\n      telefon: telefon,\n      mejl: mejl,\n      slika: slika,\n      ime: ime,\n      prezime: prezime,\n    });\n  }\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}