{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./korisnik.service\";\nexport class AgencijaService {\n  constructor(http, korisnikServis) {\n    this.http = http;\n    this.korisnikServis = korisnikServis;\n    this.url = 'http://localhost:4000';\n  }\n\n  registracija(agencija) {\n    const podaci = {\n      korisnickoIme: agencija.korisnickoIme,\n      telefon: agencija.telefon,\n      mejl: agencija.mejl,\n      slika: agencija.slika,\n      naziv: agencija.naziv,\n      ulica: agencija.ulica,\n      grad: agencija.grad,\n      drzava: agencija.drzava,\n      maticniBroj: agencija.maticniBroj,\n      opis: agencija.opis,\n      kapacitetRadnika: 0,\n      zahtev: 0\n    };\n    return this.http.post(`${this.url}/agencija/registracija`, podaci);\n  }\n\n  azurirajPodatak(korisnickoIme, podatak, vrednost) {\n    return this.http.post(`${this.url}/agencija/azurirajPodatak`, {\n      korisnickoIme: korisnickoIme,\n      podatak: podatak,\n      vrednost: vrednost\n    });\n  }\n\n  azurirajAgenciju(korisnickoIme, telefon, mejl, slika, naziv, ulica, grad, drzava, maticniBroj, opis) {\n    const agencija = {\n      korisnickoIme: korisnickoIme,\n      telefon: telefon,\n      mejl: mejl,\n      slika: slika,\n      naziv: naziv,\n      ulica: ulica,\n      grad: grad,\n      drzava: drzava,\n      maticniBroj: maticniBroj,\n      opis: opis\n    };\n    return this.http.post(`${this.url}/agencija/azurirajAgenciju`, agencija);\n  }\n\n  dohvatiAgenciju(korisnickoIme) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgenciju`, {\n      korisnickoIme: korisnickoIme\n    });\n  }\n\n  dohvatiAgencije() {\n    return this.http.get(`${this.url}/agencija/dohvatiAgencije`);\n  }\n\n  dohvatiAgencijePoNazivu(naziv) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgencijePoNazivu`, {\n      naziv: naziv\n    });\n  }\n\n  dohvatiAgencijePoAdresi(adresa) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgencijePoAdresi`, {\n      adresa: adresa\n    });\n  }\n\n  dohvatiAgencijePoNazivuIAdresi(naziv, adresa) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgencijePoNazivuIAdresi`, {\n      naziv: naziv,\n      adresa: adresa\n    });\n  }\n\n  mejlPostoji(mejl) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        _this.http.post(`${_this.url}/agencija/mejlPostoji`, {\n          mejl: mejl\n        }).subscribe(res => {\n          if (res['postoji'] == 'da') {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n\n  dohvatiAgencijuPoMejlu(mejl) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        _this2.http.post(`${_this2.url}/agencija/dohvatiAgencijuPoMejlu`, {\n          mejl: mejl\n        }).subscribe(res => {\n          resolve(res);\n        });\n      });\n    })();\n  }\n\n}\n\nAgencijaService.ɵfac = function AgencijaService_Factory(t) {\n  return new (t || AgencijaService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.KorisnikService));\n};\n\nAgencijaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AgencijaService,\n  factory: AgencijaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["AgencijaService","constructor","http","korisnikServis","registracija","agencija","podaci","korisnickoIme","telefon","mejl","slika","naziv","ulica","grad","drzava","maticniBroj","opis","kapacitetRadnika","zahtev","post","url","azurirajPodatak","podatak","vrednost","azurirajAgenciju","dohvatiAgenciju","dohvatiAgencije","get","dohvatiAgencijePoNazivu","dohvatiAgencijePoAdresi","adresa","dohvatiAgencijePoNazivuIAdresi","mejlPostoji","Promise","resolve","subscribe","res","dohvatiAgencijuPoMejlu","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\services\\agencija.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { KorisnikService } from './korisnik.service';\nimport { Agencija } from '../models/agencija';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AgencijaService {\n  constructor(\n    private http: HttpClient,\n    private korisnikServis: KorisnikService\n  ) {}\n\n  url = 'http://localhost:4000';\n\n  registracija(agencija) {\n    const podaci = {\n      korisnickoIme: agencija.korisnickoIme,\n      telefon: agencija.telefon,\n      mejl: agencija.mejl,\n      slika: agencija.slika,\n      naziv: agencija.naziv,\n      ulica: agencija.ulica,\n      grad: agencija.grad,\n      drzava: agencija.drzava,\n      maticniBroj: agencija.maticniBroj,\n      opis: agencija.opis,\n      kapacitetRadnika: 0,\n      zahtev: 0,\n    };\n    return this.http.post(`${this.url}/agencija/registracija`, podaci);\n  }\n\n  azurirajPodatak(korisnickoIme, podatak, vrednost) {\n    return this.http.post(`${this.url}/agencija/azurirajPodatak`, {\n      korisnickoIme: korisnickoIme,\n      podatak: podatak,\n      vrednost: vrednost,\n    });\n  }\n\n  azurirajAgenciju(\n    korisnickoIme,\n    telefon,\n    mejl,\n    slika,\n    naziv,\n    ulica,\n    grad,\n    drzava,\n    maticniBroj,\n    opis\n  ) {\n    const agencija = {\n      korisnickoIme: korisnickoIme,\n      telefon: telefon,\n      mejl: mejl,\n      slika: slika,\n      naziv: naziv,\n      ulica: ulica,\n      grad: grad,\n      drzava: drzava,\n      maticniBroj: maticniBroj,\n      opis: opis,\n    };\n\n    return this.http.post(`${this.url}/agencija/azurirajAgenciju`, agencija);\n  }\n\n  dohvatiAgenciju(korisnickoIme) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgenciju`, {\n      korisnickoIme: korisnickoIme,\n    });\n  }\n\n  dohvatiAgencije() {\n    return this.http.get(`${this.url}/agencija/dohvatiAgencije`);\n  }\n\n  dohvatiAgencijePoNazivu(naziv) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgencijePoNazivu`, {\n      naziv: naziv,\n    });\n  }\n\n  dohvatiAgencijePoAdresi(adresa) {\n    return this.http.post(`${this.url}/agencija/dohvatiAgencijePoAdresi`, {\n      adresa: adresa,\n    });\n  }\n\n  dohvatiAgencijePoNazivuIAdresi(naziv, adresa) {\n    return this.http.post(\n      `${this.url}/agencija/dohvatiAgencijePoNazivuIAdresi`,\n      {\n        naziv: naziv,\n        adresa: adresa,\n      }\n    );\n  }\n\n  async mejlPostoji(mejl): Promise<boolean> {\n    return new Promise((resolve) => {\n      this.http\n        .post(`${this.url}/agencija/mejlPostoji`, {\n          mejl: mejl,\n        })\n        .subscribe((res) => {\n          if (res['postoji'] == 'da') {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        });\n    });\n  }\n\n  async dohvatiAgencijuPoMejlu(mejl): Promise<Agencija> {\n    return new Promise((resolve) => {\n      this.http\n        .post(`${this.url}/agencija/dohvatiAgencijuPoMejlu`, {\n          mejl: mejl,\n        })\n        .subscribe((res: Agencija) => {\n          resolve(res);\n        });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}