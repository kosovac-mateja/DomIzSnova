{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/korisnik.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/mejl.service\";\nimport * as i4 from \"@angular/forms\";\nexport class PrijavaComponent {\n  constructor(korisnikServis, ruter, mejlServis) {\n    this.korisnikServis = korisnikServis;\n    this.ruter = ruter;\n    this.mejlServis = mejlServis;\n    this.korisnickoIme = '';\n    this.lozinka = '';\n    this.privLozinke = [];\n    this.greska = '';\n  }\n\n  ngOnInit() {}\n\n  prijava() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.korisnickoIme == '' || _this.lozinka == '') {\n        _this.greska = 'Niste uneli sve podatke';\n        return;\n      }\n\n      _this.privLozinke = yield _this.mejlServis.dohvatiPrivremeneLozinke(_this.korisnickoIme);\n\n      _this.korisnikServis.dohvatiKorisnika(_this.korisnickoIme).subscribe(korisnik => {\n        _this.korisnik = korisnik;\n\n        if (_this.korisnik == undefined) {\n          _this.greska = 'Ne postoji korisnik sa unetim korisnickim imenom';\n          return;\n        }\n\n        if (korisnik.status != 'prihvacen') {\n          _this.greska = 'Vas zahtev za registraciju jos uvek nije prihvacen';\n          return;\n        }\n\n        if (_this.korisnik.lozinka != _this.lozinka) {\n          if (_this.privLozinke == null || _this.privLozinke.find(pl => pl.lozinka == _this.lozinka) == null || new Date(_this.privLozinke.find(pl => pl.lozinka == _this.lozinka).vremeIsteka) < new Date()) {\n            _this.greska = 'Pogresna lozinka';\n            return;\n          }\n        }\n\n        if (_this.korisnik.tip == 'klijent') {\n          sessionStorage.setItem('korisnik', _this.korisnik.korisnickoIme);\n\n          _this.ruter.navigate(['/klijent']);\n        } else if (_this.korisnik.tip == 'agencija') {\n          sessionStorage.setItem('korisnik', _this.korisnik.korisnickoIme);\n\n          _this.ruter.navigate(['/agencija']);\n        }\n      });\n    })();\n  }\n\n}\n\nPrijavaComponent.ɵfac = function PrijavaComponent_Factory(t) {\n  return new (t || PrijavaComponent)(i0.ɵɵdirectiveInject(i1.KorisnikService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MejlService));\n};\n\nPrijavaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrijavaComponent,\n  selectors: [[\"app-prijava\"]],\n  decls: 31,\n  vars: 0,\n  consts: [[\"ng-controller\", \"myController\", 1, \"container\"], [\"name\", \"myForm\"], [1, \"login-container\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"type\", \"email\", \"name\", \"email\", \"ng-model\", \"user.username\", \"required\", \"\", 1, \"form-control\"], [\"ng-show\", \"myForm.email.$error.email\", 1, \"error\"], [\"ng-show\", \"myForm.email.$error.required && myForm.email.$touched\", 1, \"error\"], [\"type\", \"password\", \"name\", \"pass\", \"ng-model\", \"user.password\", \"required\", \"\", 1, \"form-control\"], [\"ng-show\", \"myForm.pass.$error.required && myForm.pass.$touched\", 1, \"error\"], [\"ng-click\", \"authenticate()\", \"ng-disabled\", \"myForm.$invalid\", 1, \"btn\", \"btn-success\", \"pull-right\"], [1, \"clearfix\"], [\"ng-show\", \"showError\", 1, \"alert\", \"alert-danger\"], [\"ng-show\", \"showSuccess\", 1, \"alert\", \"alert-success\"]],\n  template: function PrijavaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\");\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtext(10, \"Invalid email!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtext(12, \"Required!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 5)(15, \"label\");\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementStart(18, \"div\", 10);\n      i0.ɵɵtext(19, \"Required!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 5)(22, \"button\", 11);\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"div\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"div\", 4)(27, \"div\", 13);\n      i0.ɵɵtext(28, \"Wrong credentials!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 14);\n      i0.ɵɵtext(30, \"Login Successful!\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\".login-container[_ngcontent-%COMP%]{\\n  max-width: 400px; \\n  margin: 60px auto 0;\\n}\\n\\n.error[_ngcontent-%COMP%]{\\n  color: tomato; \\n  font-size: 12px; \\n  padding-top: 4px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByaWphdmEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmO0FBQ0YiLCJmaWxlIjoicHJpamF2YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lcntcbiAgbWF4LXdpZHRoOiA0MDBweDsgXG4gIG1hcmdpbjogNjBweCBhdXRvIDA7XG59XG5cbi5lcnJvcntcbiAgY29sb3I6IHRvbWF0bzsgXG4gIGZvbnQtc2l6ZTogMTJweDsgXG4gIHBhZGRpbmctdG9wOiA0cHhcbn0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["PrijavaComponent","constructor","korisnikServis","ruter","mejlServis","ngOnInit","prijava","korisnickoIme","lozinka","greska","privLozinke","dohvatiPrivremeneLozinke","dohvatiKorisnika","subscribe","korisnik","undefined","status","find","pl","Date","vremeIsteka","tip","sessionStorage","setItem","navigate","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava\\prijava.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava\\prijava.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Korisnik } from '../models/korisnik';\nimport { KorisnikService } from '../services/korisnik.service';\nimport { Router } from '@angular/router';\nimport { MejlService } from '../services/mejl.service';\nimport { PrivremenaLozinka } from '../models/privremenaLozinka';\n\n@Component({\n  selector: 'app-prijava',\n  templateUrl: './prijava.component.html',\n  styleUrls: ['./prijava.component.css'],\n})\nexport class PrijavaComponent implements OnInit {\n  constructor(\n    private korisnikServis: KorisnikService,\n    private ruter: Router,\n    private mejlServis: MejlService\n  ) {}\n\n  ngOnInit(): void {}\n\n  async prijava() {\n    if (this.korisnickoIme == '' || this.lozinka == '') {\n      this.greska = 'Niste uneli sve podatke';\n      return;\n    }\n\n    this.privLozinke = await this.mejlServis.dohvatiPrivremeneLozinke(\n      this.korisnickoIme\n    );\n\n    this.korisnikServis\n      .dohvatiKorisnika(this.korisnickoIme)\n      .subscribe((korisnik: Korisnik) => {\n        this.korisnik = korisnik;\n        if (this.korisnik == undefined) {\n          this.greska = 'Ne postoji korisnik sa unetim korisnickim imenom';\n          return;\n        }\n\n        if (korisnik.status != 'prihvacen') {\n          this.greska = 'Vas zahtev za registraciju jos uvek nije prihvacen';\n          return;\n        }\n\n        if (this.korisnik.lozinka != this.lozinka) {\n          if (\n            this.privLozinke == null ||\n            this.privLozinke.find((pl) => pl.lozinka == this.lozinka) == null ||\n            new Date(\n              this.privLozinke.find(\n                (pl) => pl.lozinka == this.lozinka\n              ).vremeIsteka\n            ) < new Date()\n          ) {\n            this.greska = 'Pogresna lozinka';\n            return;\n          }\n        }\n\n        if (this.korisnik.tip == 'klijent') {\n          sessionStorage.setItem('korisnik', this.korisnik.korisnickoIme);\n          this.ruter.navigate(['/klijent']);\n        } else if (this.korisnik.tip == 'agencija') {\n          sessionStorage.setItem('korisnik', this.korisnik.korisnickoIme);\n          this.ruter.navigate(['/agencija']);\n        }\n      });\n  }\n\n  korisnickoIme: string = '';\n  lozinka: string = '';\n  korisnik: Korisnik;\n\n  privLozinke: PrivremenaLozinka[] = [];\n\n  greska: string = '';\n}\n","<div ng-controller=\"myController\" class=\"container\">\n  <form name=\"myForm\">\n    <div class=\"login-container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" ng-model=\"user.username\" required class=\"form-control\">\n            <div ng-show=\"myForm.email.$error.email\" class=\"error\">Invalid email!</div>\n            <div ng-show=\"myForm.email.$error.required &amp;&amp; myForm.email.$touched\" class=\"error\">Required!</div>\n          </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" name=\"pass\" ng-model=\"user.password\" required class=\"form-control\">\n            <div ng-show=\"myForm.pass.$error.required &amp;&amp; myForm.pass.$touched\" class=\"error\">Required!</div>\n          </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <button ng-click=\"authenticate()\" ng-disabled=\"myForm.$invalid\" class=\"btn btn-success pull-right\">Login</button>\n            <div class=\"clearfix\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div ng-show=\"showError\" class=\"alert alert-danger\">Wrong credentials!</div>\n          <div ng-show=\"showSuccess\" class=\"alert alert-success\">Login Successful!</div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module"}