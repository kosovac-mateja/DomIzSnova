{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/admin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction PrijavaAdminComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r3, \" \");\n  }\n}\n\nfunction PrijavaAdminComponent_mdb_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PrijavaAdminComponent_mdb_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class PrijavaAdminComponent {\n  constructor(adminServis, ruter) {\n    this.adminServis = adminServis;\n    this.ruter = ruter;\n    this.administratori = [];\n    this.greska = '';\n  }\n\n  ngOnInit() {\n    this.adminServis.dohvatiAdmine().subscribe(admini => {\n      this.administratori = admini;\n    });\n  }\n\n  prijava() {\n    if (this.korisnickoIme == '' || this.lozinka == '') {\n      this.greska = 'Niste uneli sve podatke';\n      return;\n    }\n\n    let admin = this.administratori.find(admin => admin.korisnickoIme == this.korisnickoIme);\n\n    if (admin == undefined) {\n      this.greska = 'Ne postoji administrator sa unetim korisnickim imenom';\n      return;\n    }\n\n    if (admin.lozinka != this.lozinka) {\n      this.greska = 'Pogresna lozinka';\n      return;\n    }\n\n    this.ruter.navigate(['/admin']);\n  }\n\n}\n\nPrijavaAdminComponent.ɵfac = function PrijavaAdminComponent_Factory(t) {\n  return new (t || PrijavaAdminComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nPrijavaAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrijavaAdminComponent,\n  selectors: [[\"app-prijava-admin\"]],\n  decls: 36,\n  vars: 8,\n  consts: [[1, \"container-fluid\", \"full-page-container\"], [1, \"row\", \"h-100\", \"justify-content-center\", \"align-items-center\"], [1, \"col-lg-4\", \"col-sm-8\", \"animated\", \"fadeIn\"], [1, \"z-depth-2\"], [1, \"white\", \"text-center\", \"py-4\"], [1, \"px-lg-5\", \"pt-0\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"text-center\", 2, \"color\", \"#757575\", 3, \"formGroup\"], [1, \"md-form\"], [\"mdbValidate\", \"\", \"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"mdbInput\", \"\", 1, \"form-control\", 3, \"validateSuccess\"], [\"for\", \"email\"], [4, \"ngIf\"], [\"mdbValidate\", \"\", \"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"mdbInput\", \"\", 1, \"form-control\", 3, \"validateSuccess\"], [\"for\", \"password\"], [\"mdbBtn\", \"\", \"color\", \"primary\", \"block\", \"true\", \"mdbWavesEffect\", \"\", \"type\", \"submit\", 1, \"my-4\", \"waves-effect\", \"z-depth-0\", 3, \"click\"], [\"routerLink\", \"/register\"], [\"type\", \"button\", 1, \"mr-4\", 3, \"click\"], [\"fab\", \"\", \"icon\", \"facebook-f\"], [\"fab\", \"\", \"icon\", \"twitter\"], [\"type\", \"button\", 3, \"click\"], [\"fab\", \"\", \"icon\", \"google-plus-g\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n  template: function PrijavaAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mdb-card\", 3)(4, \"div\", 4)(5, \"h5\")(6, \"strong\");\n      i0.ɵɵtext(7, \"Log in\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"mdb-card-body\", 5);\n      i0.ɵɵtemplate(9, PrijavaAdminComponent_div_9_Template, 2, 1, \"div\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementStart(11, \"form\", 7)(12, \"div\", 8);\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementStart(14, \"label\", 10);\n      i0.ɵɵtext(15, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, PrijavaAdminComponent_mdb_error_16_Template, 2, 0, \"mdb-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵelementStart(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, PrijavaAdminComponent_mdb_error_21_Template, 2, 0, \"mdb-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function PrijavaAdminComponent_Template_button_click_22_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(23, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"p\");\n      i0.ɵɵtext(25, \"Not a member? \");\n      i0.ɵɵelementStart(26, \"a\", 15);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"p\");\n      i0.ɵɵtext(29, \"or log in with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"a\", 16);\n      i0.ɵɵlistener(\"click\", function PrijavaAdminComponent_Template_a_click_30_listener() {\n        return ctx.onFacebookLogin(\"facebook\");\n      });\n      i0.ɵɵelement(31, \"mdb-icon\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"a\", 16);\n      i0.ɵɵlistener(\"click\", function PrijavaAdminComponent_Template_a_click_32_listener() {\n        return ctx.onTwitterLogin(\"twitter\");\n      });\n      i0.ɵɵelement(33, \"mdb-icon\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"a\", 19);\n      i0.ɵɵlistener(\"click\", function PrijavaAdminComponent_Template_a_click_34_listener() {\n        return ctx.onGoogleLogin(\"google\");\n      });\n      i0.ɵɵelement(35, \"mdb-icon\", 20);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 6, ctx.error$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"validateSuccess\", false);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"validateSuccess\", false);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLinkWithHref, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcmlqYXZhLWFkbWluLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAeYA;IACEA;IACFA;;;;;IADEA;IAAAA;;;;;;IASEA;IAA4EA;IAAiBA;;;;;;IAO7FA;IAAwFA;IAAoBA;;;;ACtB5H,OAAM,MAAOC,qBAAP,CAA4B;EAChCC,YAAoBC,WAApB,EAAuDC,KAAvD,EAAoE;IAAhD;IAAmC;IAkCvD,sBAA0B,EAA1B;IAEA,cAAiB,EAAjB;EApCwE;;EAExEC,QAAQ;IACN,KAAKF,WAAL,CAAiBG,aAAjB,GAAiCC,SAAjC,CAA4CC,MAAD,IAAoB;MAC7D,KAAKC,cAAL,GAAsBD,MAAtB;IACD,CAFD;EAGD;;EAEDE,OAAO;IACL,IAAI,KAAKC,aAAL,IAAsB,EAAtB,IAA4B,KAAKC,OAAL,IAAgB,EAAhD,EAAoD;MAClD,KAAKC,MAAL,GAAc,yBAAd;MACA;IACD;;IAED,IAAIC,KAAK,GAAG,KAAKL,cAAL,CAAoBM,IAApB,CACTD,KAAD,IAAWA,KAAK,CAACH,aAAN,IAAuB,KAAKA,aAD7B,CAAZ;;IAIA,IAAIG,KAAK,IAAIE,SAAb,EAAwB;MACtB,KAAKH,MAAL,GAAc,uDAAd;MACA;IACD;;IAED,IAAIC,KAAK,CAACF,OAAN,IAAiB,KAAKA,OAA1B,EAAmC;MACjC,KAAKC,MAAL,GAAc,kBAAd;MACA;IACD;;IAED,KAAKT,KAAL,CAAWa,QAAX,CAAoB,CAAC,QAAD,CAApB;EACD;;AA9B+B;;;mBAArBhB,uBAAqBD;AAAA;;;QAArBC;EAAqBiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlCtB,+BAAiD,CAAjD,EAAiD,KAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,KAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,UAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,KAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,IAAjD,EAAiD,CAAjD,EAAiD,QAAjD;MAQsBA;MAAMA;MAMlBA;MACEA;;MAIAA,iCAA0E,EAA1E,EAA0E,KAA1E,EAA0E,CAA1E;MAIIA;MACAA;MAAmBA;MAAMA;MACzBA;MACFA;MAGAA;MACEA;MACAA;MAAsBA;MAAQA;MAC9BA;MACFA;MAGAA;MAC+BA;QAAA,OAASuB,aAAT;MAAkB,CAAlB;MAAoBvB;MAAMA;MAGzDA;MAAGA;MACDA;MAA0BA;MAAQA;MAIpCA;MAAGA;MAAeA;MAClBA;MAA8BA;QAAA,OAASuB,oBAAgB,UAAhB,CAAT;MAAoC,CAApC;MAC5BvB;MACFA;MACAA;MAA8BA;QAAA,OAASuB,mBAAe,SAAf,CAAT;MAAkC,CAAlC;MAC5BvB;MACFA;MACAA;MAAiBA;QAAA,OAASuB,kBAAc,QAAd,CAAT;MAAgC,CAAhC;MACfvB;MACFA;;;;MAvCIA;MAAAA;MAIAA;MAAAA;MAIiBA;MAAAA;MAEPA;MAAAA;MAKOA;MAAAA;MAEPA;MAAAA","names":["i0","PrijavaAdminComponent","constructor","adminServis","ruter","ngOnInit","dohvatiAdmine","subscribe","admini","administratori","prijava","korisnickoIme","lozinka","greska","admin","find","undefined","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava-admin\\prijava-admin.component.html","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava-admin\\prijava-admin.component.ts"],"sourcesContent":["<div class=\"container-fluid full-page-container\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n      <div class=\"col-lg-4 col-sm-8 animated fadeIn\">\n        <!-- Material form login -->\n        <mdb-card class=\"z-depth-2\">\n  \n          <div class=\"white text-center py-4\">\n            <h5>\n              <strong>Log in</strong>\n            </h5>\n          </div>\n  \n  \n          <!--Card content-->\n          <mdb-card-body class=\"px-lg-5 pt-0\">\n            <div *ngIf=\"error$ | async as error\" class=\"alert alert-danger\" role=\"alert\">\n              {{ error }}\n            </div>\n            <!-- Form -->\n            <form [formGroup]=\"loginForm\" class=\"text-center\" style=\"color: #757575;\">\n  \n              <!-- Email -->\n              <div class=\"md-form\">\n                <input mdbValidate [validateSuccess]=\"false\" type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" mdbInput>\n                <label for=\"email\">E-mail</label>\n                <mdb-error *ngIf=\"email && email.invalid && (email.dirty || email.touched)\">Email is required</mdb-error>\n              </div>\n  \n              <!-- Password -->\n              <div class=\"md-form\">\n                <input mdbValidate [validateSuccess]=\"false\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" mdbInput>\n                <label for=\"password\">Password</label>\n                <mdb-error *ngIf=\"password && password.invalid && (password.dirty || password.touched)\">Password is required</mdb-error>\n              </div>\n  \n              <!-- Sign in button -->\n              <button mdbBtn color=\"primary\" block=\"true\" class=\"my-4 waves-effect z-depth-0\"\n                mdbWavesEffect type=\"submit\" (click)=\"onLogin()\">Log in</button>\n  \n              <!-- Register -->\n              <p>Not a member?\n                <a routerLink=\"/register\">Register</a>\n              </p>\n  \n              <!-- Social login -->\n              <p>or log in with:</p>\n              <a type=\"button\" class=\"mr-4\" (click)=\"onFacebookLogin('facebook')\">\n                <mdb-icon fab icon=\"facebook-f\"></mdb-icon>\n              </a>\n              <a type=\"button\" class=\"mr-4\" (click)=\"onTwitterLogin('twitter')\">\n                <mdb-icon fab icon=\"twitter\"></mdb-icon>\n              </a>\n              <a type=\"button\" (click)=\"onGoogleLogin('google')\">\n                <mdb-icon fab icon=\"google-plus-g\"></mdb-icon>\n              </a>\n            </form>\n            <!-- Form -->\n  \n          </mdb-card-body>\n  \n        </mdb-card>\n        <!-- Material form login -->\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../services/admin.service';\nimport { Admin } from '../models/admin';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-prijava-admin',\n  templateUrl: './prijava-admin.component.html',\n  styleUrls: ['./prijava-admin.component.css'],\n})\nexport class PrijavaAdminComponent implements OnInit {\n  constructor(private adminServis: AdminService, private ruter: Router) {}\n\n  ngOnInit(): void {\n    this.adminServis.dohvatiAdmine().subscribe((admini: Admin[]) => {\n      this.administratori = admini;\n    });\n  }\n\n  prijava() {\n    if (this.korisnickoIme == '' || this.lozinka == '') {\n      this.greska = 'Niste uneli sve podatke';\n      return;\n    }\n\n    let admin = this.administratori.find(\n      (admin) => admin.korisnickoIme == this.korisnickoIme\n    );\n\n    if (admin == undefined) {\n      this.greska = 'Ne postoji administrator sa unetim korisnickim imenom';\n      return;\n    }\n\n    if (admin.lozinka != this.lozinka) {\n      this.greska = 'Pogresna lozinka';\n      return;\n    }\n\n    this.ruter.navigate(['/admin']);\n  }\n\n  korisnickoIme: string;\n  lozinka: string;\n\n  administratori: Admin[] = [];\n\n  greska: string = '';\n}\n"]},"metadata":{},"sourceType":"module"}