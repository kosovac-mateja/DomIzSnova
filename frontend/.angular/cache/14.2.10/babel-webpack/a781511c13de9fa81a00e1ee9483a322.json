{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/korisnik.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/mejl.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../zaglavlje-pocetna/zaglavlje-pocetna.component\";\nexport class PrijavaComponent {\n  constructor(korisnikServis, ruter, mejlServis) {\n    this.korisnikServis = korisnikServis;\n    this.ruter = ruter;\n    this.mejlServis = mejlServis;\n    this.korisnickoIme = '';\n    this.lozinka = '';\n    this.privLozinke = [];\n    this.greska = '';\n  }\n\n  ngOnInit() {}\n\n  prijava() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.korisnickoIme == '' || _this.lozinka == '') {\n        _this.greska = 'Niste uneli sve podatke';\n        return;\n      }\n\n      _this.privLozinke = yield _this.mejlServis.dohvatiPrivremeneLozinke(_this.korisnickoIme);\n\n      _this.korisnikServis.dohvatiKorisnika(_this.korisnickoIme).subscribe(korisnik => {\n        _this.korisnik = korisnik;\n\n        if (_this.korisnik == undefined) {\n          _this.greska = 'Ne postoji korisnik sa unetim korisnickim imenom';\n          return;\n        }\n\n        if (korisnik.status != 'prihvacen') {\n          _this.greska = 'Vas zahtev za registraciju jos uvek nije prihvacen';\n          return;\n        }\n\n        if (_this.korisnik.lozinka != _this.lozinka) {\n          if (_this.privLozinke == null || _this.privLozinke.find(pl => pl.lozinka == _this.lozinka) == null || new Date(_this.privLozinke.find(pl => pl.lozinka == _this.lozinka).vremeIsteka) < new Date()) {\n            _this.greska = 'Pogresna lozinka';\n            return;\n          }\n        }\n\n        if (_this.korisnik.tip == 'klijent') {\n          sessionStorage.setItem('korisnik', _this.korisnik.korisnickoIme);\n\n          _this.ruter.navigate(['/klijent']);\n        } else if (_this.korisnik.tip == 'agencija') {\n          sessionStorage.setItem('korisnik', _this.korisnik.korisnickoIme);\n\n          _this.ruter.navigate(['/agencija']);\n        }\n      });\n    })();\n  }\n\n}\n\nPrijavaComponent.ɵfac = function PrijavaComponent_Factory(t) {\n  return new (t || PrijavaComponent)(i0.ɵɵdirectiveInject(i1.KorisnikService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MejlService));\n};\n\nPrijavaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrijavaComponent,\n  selectors: [[\"app-prijava\"]],\n  decls: 13,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", 2, \"height\", \"100vh\"], [1, \"col-4\"], [1, \"card\"], [1, \"card-body\"], [\"action\", \"\", \"autocomplete\", \"off\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"username\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\"], [\"type\", \"button\", \"id\", \"sendlogin\", 1, \"btn\", \"btn-primary\"]],\n  template: function PrijavaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-zaglavlje-pocetna\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"form\", 5)(7, \"div\", 6);\n      i0.ɵɵelement(8, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9);\n      i0.ɵɵtext(12, \"login\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.ZaglavljePocetnaComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcmlqYXZhLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAYA,OAAM,MAAOA,gBAAP,CAAuB;EAC3BC,YACUC,cADV,EAEUC,KAFV,EAGUC,UAHV,EAGiC;IAFvB;IACA;IACA;IAsDV,qBAAwB,EAAxB;IACA,eAAkB,EAAlB;IAGA,mBAAmC,EAAnC;IAEA,cAAiB,EAAjB;EA3DI;;EAEJC,QAAQ,IAAW;;EAEbC,OAAO;IAAA;;IAAA;MACX,IAAI,KAAI,CAACC,aAAL,IAAsB,EAAtB,IAA4B,KAAI,CAACC,OAAL,IAAgB,EAAhD,EAAoD;QAClD,KAAI,CAACC,MAAL,GAAc,yBAAd;QACA;MACD;;MAED,KAAI,CAACC,WAAL,SAAyB,KAAI,CAACN,UAAL,CAAgBO,wBAAhB,CACvB,KAAI,CAACJ,aADkB,CAAzB;;MAIA,KAAI,CAACL,cAAL,CACGU,gBADH,CACoB,KAAI,CAACL,aADzB,EAEGM,SAFH,CAEcC,QAAD,IAAuB;QAChC,KAAI,CAACA,QAAL,GAAgBA,QAAhB;;QACA,IAAI,KAAI,CAACA,QAAL,IAAiBC,SAArB,EAAgC;UAC9B,KAAI,CAACN,MAAL,GAAc,kDAAd;UACA;QACD;;QAED,IAAIK,QAAQ,CAACE,MAAT,IAAmB,WAAvB,EAAoC;UAClC,KAAI,CAACP,MAAL,GAAc,oDAAd;UACA;QACD;;QAED,IAAI,KAAI,CAACK,QAAL,CAAcN,OAAd,IAAyB,KAAI,CAACA,OAAlC,EAA2C;UACzC,IACE,KAAI,CAACE,WAAL,IAAoB,IAApB,IACA,KAAI,CAACA,WAAL,CAAiBO,IAAjB,CAAuBC,EAAD,IAAQA,EAAE,CAACV,OAAH,IAAc,KAAI,CAACA,OAAjD,KAA6D,IAD7D,IAEA,IAAIW,IAAJ,CACE,KAAI,CAACT,WAAL,CAAiBO,IAAjB,CACGC,EAAD,IAAQA,EAAE,CAACV,OAAH,IAAc,KAAI,CAACA,OAD7B,EAEEY,WAHJ,IAII,IAAID,IAAJ,EAPN,EAQE;YACA,KAAI,CAACV,MAAL,GAAc,kBAAd;YACA;UACD;QACF;;QAED,IAAI,KAAI,CAACK,QAAL,CAAcO,GAAd,IAAqB,SAAzB,EAAoC;UAClCC,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC,KAAI,CAACT,QAAL,CAAcP,aAAjD;;UACA,KAAI,CAACJ,KAAL,CAAWqB,QAAX,CAAoB,CAAC,UAAD,CAApB;QACD,CAHD,MAGO,IAAI,KAAI,CAACV,QAAL,CAAcO,GAAd,IAAqB,UAAzB,EAAqC;UAC1CC,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC,KAAI,CAACT,QAAL,CAAcP,aAAjD;;UACA,KAAI,CAACJ,KAAL,CAAWqB,QAAX,CAAoB,CAAC,WAAD,CAApB;QACD;MACF,CApCH;IAVW;EA+CZ;;AAxD0B;;;mBAAhBxB,kBAAgByB;AAAA;;;QAAhBzB;EAAgB0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7BL;MACAA,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,MAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB;MAO0BA;MACJA;MACAA;MACIA;MACJA;MACAA;MAA6DA;MAAKA","names":["PrijavaComponent","constructor","korisnikServis","ruter","mejlServis","ngOnInit","prijava","korisnickoIme","lozinka","greska","privLozinke","dohvatiPrivremeneLozinke","dohvatiKorisnika","subscribe","korisnik","undefined","status","find","pl","Date","vremeIsteka","tip","sessionStorage","setItem","navigate","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava\\prijava.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\prijava\\prijava.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Korisnik } from '../models/korisnik';\nimport { KorisnikService } from '../services/korisnik.service';\nimport { Router } from '@angular/router';\nimport { MejlService } from '../services/mejl.service';\nimport { PrivremenaLozinka } from '../models/privremenaLozinka';\n\n@Component({\n  selector: 'app-prijava',\n  templateUrl: './prijava.component.html',\n  styleUrls: ['./prijava.component.css'],\n})\nexport class PrijavaComponent implements OnInit {\n  constructor(\n    private korisnikServis: KorisnikService,\n    private ruter: Router,\n    private mejlServis: MejlService\n  ) {}\n\n  ngOnInit(): void {}\n\n  async prijava() {\n    if (this.korisnickoIme == '' || this.lozinka == '') {\n      this.greska = 'Niste uneli sve podatke';\n      return;\n    }\n\n    this.privLozinke = await this.mejlServis.dohvatiPrivremeneLozinke(\n      this.korisnickoIme\n    );\n\n    this.korisnikServis\n      .dohvatiKorisnika(this.korisnickoIme)\n      .subscribe((korisnik: Korisnik) => {\n        this.korisnik = korisnik;\n        if (this.korisnik == undefined) {\n          this.greska = 'Ne postoji korisnik sa unetim korisnickim imenom';\n          return;\n        }\n\n        if (korisnik.status != 'prihvacen') {\n          this.greska = 'Vas zahtev za registraciju jos uvek nije prihvacen';\n          return;\n        }\n\n        if (this.korisnik.lozinka != this.lozinka) {\n          if (\n            this.privLozinke == null ||\n            this.privLozinke.find((pl) => pl.lozinka == this.lozinka) == null ||\n            new Date(\n              this.privLozinke.find(\n                (pl) => pl.lozinka == this.lozinka\n              ).vremeIsteka\n            ) < new Date()\n          ) {\n            this.greska = 'Pogresna lozinka';\n            return;\n          }\n        }\n\n        if (this.korisnik.tip == 'klijent') {\n          sessionStorage.setItem('korisnik', this.korisnik.korisnickoIme);\n          this.ruter.navigate(['/klijent']);\n        } else if (this.korisnik.tip == 'agencija') {\n          sessionStorage.setItem('korisnik', this.korisnik.korisnickoIme);\n          this.ruter.navigate(['/agencija']);\n        }\n      });\n  }\n\n  korisnickoIme: string = '';\n  lozinka: string = '';\n  korisnik: Korisnik;\n\n  privLozinke: PrivremenaLozinka[] = [];\n\n  greska: string = '';\n}\n","<app-zaglavlje-pocetna></app-zaglavlje-pocetna>\n<div class=\"container\">\n  <div class=\"row justify-content-center align-items-center\" style=\"height:100vh\">\n      <div class=\"col-4\">\n          <div class=\"card\">\n              <div class=\"card-body\">\n                  <form action=\"\" autocomplete=\"off\">\n                      <div class=\"form-group\">\n                          <input type=\"text\" class=\"form-control\" name=\"username\">\n                      </div>\n                      <div class=\"form-group\">\n                          <input type=\"password\" class=\"form-control\" name=\"password\">\n                      </div>\n                      <button type=\"button\" id=\"sendlogin\" class=\"btn btn-primary\">login</button>\n                  </form>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module"}