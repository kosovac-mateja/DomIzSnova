{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/objekat.service\";\nimport * as i2 from \"../services/skica.service\";\nimport * as i3 from \"../services/provera.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nexport class ObjekatDodavanjeComponent {\n  constructor(objekatServis, skicaServis, proveraServis, ruter) {\n    this.objekatServis = objekatServis;\n    this.skicaServis = skicaServis;\n    this.proveraServis = proveraServis;\n    this.ruter = ruter;\n    this.tip = 'stan';\n    this.adresa = '';\n    this.brProstorija = 1;\n    this.kvadratura = 0;\n    this.greska = '';\n    this.koordinate = [];\n    this.dimenzije = [];\n    this.koordinateVrata = [];\n  }\n\n  ngOnInit() {}\n\n  dalje() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.kvadratura <= 0) {\n        _this.greska = 'Broj kvadrata mora biti pozitivan broj';\n        return;\n      }\n\n      let proveraAdresa = yield _this.proveraServis.proveraUlica(_this.adresa);\n      sessionStorage.setItem('dodavanjeObjektaTip', _this.tip);\n      sessionStorage.setItem('dodavanjeObjektaAdresa', _this.adresa);\n      sessionStorage.setItem('dodavanjeObjektaBrProstorija', _this.brProstorija.toString());\n      sessionStorage.setItem('dodavanjeObjektaKvadratura', _this.kvadratura.toString());\n\n      _this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n    })();\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n\n        citac.onload = e => {\n          const sadrzajFajla = citac.result;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n          console.log(this.tip, this.adresa, this.brProstorija, this.kvadratura, this.koordinate, this.dimenzije);\n        };\n\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n\n  dodajObjekat() {\n    //TODO: nije otporno na greske\n    let boje = [];\n\n    for (let i = 0; i < this.koordinate.length; i++) {\n      boje.push('white');\n    }\n\n    this.skicaServis.ubaciSkicu(this.koordinate, this.dimenzije, boje, this.koordinateVrata).subscribe(skica => {\n      let id = skica._id;\n      this.objekatServis.dodajObjekat(this.tip, this.adresa, this.brProstorija, this.kvadratura, id, sessionStorage.getItem('korisnik')).subscribe(objekatId => {\n        alert('Uspešno ste dodali objekat!');\n        this.ruter.navigate(['/klijent/objekat']);\n      });\n    });\n  }\n\n}\n\nObjekatDodavanjeComponent.ɵfac = function ObjekatDodavanjeComponent_Factory(t) {\n  return new (t || ObjekatDodavanjeComponent)(i0.ɵɵdirectiveInject(i1.ObjekatService), i0.ɵɵdirectiveInject(i2.SkicaService), i0.ɵɵdirectiveInject(i3.ProveraService), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nObjekatDodavanjeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ObjekatDodavanjeComponent,\n  selectors: [[\"app-objekat-dodavanje\"]],\n  decls: 41,\n  vars: 5,\n  consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"stan\"], [\"value\", \"kuca\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"colspan\", \"2\"], [3, \"click\"], [\"type\", \"file\", 3, \"change\"]],\n  template: function ObjekatDodavanjeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\");\n      i0.ɵɵtext(3, \"Tip objekta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.tip = $event;\n      });\n      i0.ɵɵelementStart(5, \"option\", 1);\n      i0.ɵɵtext(6, \"stan\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 2);\n      i0.ɵɵtext(8, \"kuca\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"tr\")(10, \"td\");\n      i0.ɵɵtext(11, \"Adresa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"td\")(13, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.adresa = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tr\")(15, \"td\");\n      i0.ɵɵtext(16, \"Broj prostorija\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"td\")(18, \"select\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.brProstorija = $event;\n      });\n      i0.ɵɵelementStart(19, \"option\", 4);\n      i0.ɵɵtext(20, \"1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 5);\n      i0.ɵɵtext(22, \"2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 6);\n      i0.ɵɵtext(24, \"3\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(25, \"tr\")(26, \"td\");\n      i0.ɵɵtext(27, \"Broj kvadrata\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"td\")(29, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.kvadratura = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"tr\")(31, \"td\", 8)(32, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_32_listener() {\n        return ctx.dalje();\n      });\n      i0.ɵɵtext(33, \"Dalje\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"h1\");\n      i0.ɵɵtext(35, \"ILI\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(36, \" Otpremi objekat u JSON formatu\\n\");\n      i0.ɵɵelementStart(37, \"input\", 10);\n      i0.ɵɵlistener(\"change\", function ObjekatDodavanjeComponent_Template_input_change_37_listener($event) {\n        return ctx.otpremanjeFajla($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_38_listener() {\n        return ctx.dodajObjekat();\n      });\n      i0.ɵɵtext(39, \"Dodaj objekat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.tip);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.adresa);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.brProstorija);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.kvadratura);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.greska, \"\");\n    }\n  },\n  dependencies: [i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvYmpla2F0LWRvZGF2YW5qZS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ObjekatDodavanjeComponent","constructor","objekatServis","skicaServis","proveraServis","ruter","ngOnInit","dalje","kvadratura","greska","proveraAdresa","proveraUlica","adresa","sessionStorage","setItem","tip","brProstorija","toString","navigate","otpremanjeFajla","fajl","target","files","type","citac","FileReader","onload","e","sadrzajFajla","result","jsonFormat","JSON","parse","koordinate","dimenzije","koordinateVrata","console","log","readAsText","dodajObjekat","boje","i","length","push","ubaciSkicu","subscribe","skica","id","_id","getItem","objekatId","alert","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Koordinata } from '../models/koordinata';\nimport { Dimenzije } from '../models/dimenzije';\nimport { SkicaService } from '../services/skica.service';\nimport { ObjekatService } from '../services/objekat.service';\nimport { Skica } from '../models/skica';\nimport { ProveraService } from '../services/provera.service';\n\n@Component({\n  selector: 'app-objekat-dodavanje',\n  templateUrl: './objekat-dodavanje.component.html',\n  styleUrls: ['./objekat-dodavanje.component.css'],\n})\nexport class ObjekatDodavanjeComponent implements OnInit {\n  constructor(\n    private objekatServis: ObjekatService,\n    private skicaServis: SkicaService,\n    private proveraServis: ProveraService,\n    private ruter: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  async dalje() {\n    if (this.kvadratura <= 0) {\n      this.greska = 'Broj kvadrata mora biti pozitivan broj';\n      return;\n    }\n    let proveraAdresa = await this.proveraServis.proveraUlica(this.adresa);\n    sessionStorage.setItem('dodavanjeObjektaTip', this.tip);\n    sessionStorage.setItem('dodavanjeObjektaAdresa', this.adresa);\n    sessionStorage.setItem(\n      'dodavanjeObjektaBrProstorija',\n      this.brProstorija.toString()\n    );\n    sessionStorage.setItem(\n      'dodavanjeObjektaKvadratura',\n      this.kvadratura.toString()\n    );\n    this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n        citac.onload = (e: any) => {\n          const sadrzajFajla = citac.result as string;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n          console.log(\n            this.tip,\n            this.adresa,\n            this.brProstorija,\n            this.kvadratura,\n            this.koordinate,\n            this.dimenzije\n          );\n        };\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n\n  dodajObjekat() {\n    //TODO: nije otporno na greske\n    let boje = [];\n    for (let i = 0; i < this.koordinate.length; i++) {\n      boje.push('white');\n    }\n    this.skicaServis\n      .ubaciSkicu(this.koordinate, this.dimenzije, boje, this.koordinateVrata)\n      .subscribe((skica: Skica) => {\n        let id = skica._id;\n        this.objekatServis\n          .dodajObjekat(\n            this.tip,\n            this.adresa,\n            this.brProstorija,\n            this.kvadratura,\n            id,\n            sessionStorage.getItem('korisnik')\n          )\n          .subscribe((objekatId) => {\n            alert('Uspešno ste dodali objekat!');\n            this.ruter.navigate(['/klijent/objekat']);\n          });\n      });\n  }\n\n  tip: string = 'stan';\n  adresa: string = '';\n  brProstorija: number = 1;\n  kvadratura: number = 0;\n  greska = '';\n\n  koordinate: Koordinata[] = [];\n  dimenzije: Dimenzije[] = [];\n  koordinateVrata: Koordinata[] = [];\n}\n","<table>\n    <tr>\n        <td>Tip objekta</td>\n        <select [(ngModel)]=\"tip\">\n            <option value=\"stan\">stan</option>\n            <option value=\"kuca\">kuca</option>\n        </select>\n    </tr>\n    <tr>\n        <td>Adresa</td>\n        <td><input type=\"text\" [(ngModel)]=\"adresa\"></td>\n    </tr>\n    <tr>\n        <td>Broj prostorija</td>\n        <td><select [(ngModel)]=\"brProstorija\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n        </select></td>\n    </tr>\n    <tr>\n        <td>Broj kvadrata</td>\n        <td><input type=\"number\" [(ngModel)]=\"kvadratura\"></td>\n    </tr>\n    <tr>\n        <td colspan=\"2\">\n            <button (click)=\"dalje()\">Dalje</button>\n        </td>\n    </tr>\n</table>\n\n<h1>ILI</h1>\n\nOtpremi objekat u JSON formatu\n<input type=\"file\" (change)=\"otpremanjeFajla($event)\">\n<button (click)=\"dodajObjekat()\">Dodaj objekat</button>\n{{greska}}"]},"metadata":{},"sourceType":"module"}