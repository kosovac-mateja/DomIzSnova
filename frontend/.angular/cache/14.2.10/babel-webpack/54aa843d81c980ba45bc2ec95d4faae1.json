{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Korisnik } from '../models/korisnik';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/korisnik.service\";\nimport * as i2 from \"../services/mejl.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class PromenaLozinkeComponent {\n  constructor(korisnikServis, mejlServis, ruter) {\n    this.korisnikServis = korisnikServis;\n    this.mejlServis = mejlServis;\n    this.ruter = ruter;\n    this.korisnik = new Korisnik();\n    this.privremeneLozinke = [];\n    this.greska = '';\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let korisnickoIme = sessionStorage.getItem('korisnik');\n      _this.privremeneLozinke = yield _this.mejlServis.dohvatiPrivremeneLozinke(korisnickoIme);\n\n      _this.korisnikServis.dohvatiKorisnika(korisnickoIme).subscribe(korisnik => {\n        _this.korisnik = korisnik;\n      });\n    })();\n  }\n\n  promeniLozinku() {\n    if (this.staraLozinka != this.korisnik.lozinka) {\n      for (const privremena of this.privremeneLozinke) {\n        if (privremena.lozinka == this.staraLozinka) {\n          if (privremena.vremeIsteka < new Date()) {\n            break;\n          }\n        }\n      }\n\n      this.greska = 'Uneta stara lozinka nije ispravna';\n      return;\n    } else if (this.novaLozinka != this.potvrdaNoveLozinke) {\n      this.greska = 'Unete lozinke se ne poklapaju';\n      return;\n    } else if (this.novaLozinka == this.staraLozinka) {\n      this.greska = 'Nova lozinka ne sme biti ista kao stara';\n      return;\n    } else {\n      this.korisnikServis.azurirajLozinku(this.korisnik.korisnickoIme, this.novaLozinka).subscribe(res => {\n        alert('Lozinka uspesno promenjena!');\n        sessionStorage.clear();\n        this.ruter.navigate(['/']);\n      });\n    }\n  }\n\n}\n\nPromenaLozinkeComponent.ɵfac = function PromenaLozinkeComponent_Factory(t) {\n  return new (t || PromenaLozinkeComponent)(i0.ɵɵdirectiveInject(i1.KorisnikService), i0.ɵɵdirectiveInject(i2.MejlService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nPromenaLozinkeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PromenaLozinkeComponent,\n  selectors: [[\"app-promena-lozinke\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"colspan\", \"2\"], [3, \"click\"]],\n  template: function PromenaLozinkeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Promena lozinke\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n      i0.ɵɵtext(5, \"Stara lozinka\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\")(7, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PromenaLozinkeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.staraLozinka = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n      i0.ɵɵtext(10, \"Nova lozinka\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\")(12, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PromenaLozinkeComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.novaLozinka = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15, \"Potvrda nove lozinke\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\")(17, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PromenaLozinkeComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.potvrdaNoveLozinke = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tr\")(19, \"td\", 1)(20, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function PromenaLozinkeComponent_Template_button_click_20_listener() {\n        return ctx.promeniLozinku();\n      });\n      i0.ɵɵtext(21, \"Promeni lozinku\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtext(22);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.staraLozinka);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.novaLozinka);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.potvrdaNoveLozinke);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.greska, \"\");\n    }\n  },\n  dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9tZW5hLWxvemlua2UuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,QAAT,QAAyB,oBAAzB;;;;;;AAUA,OAAM,MAAOC,uBAAP,CAA8B;EAClCC,YACUC,cADV,EAEUC,UAFV,EAGUC,KAHV,EAGuB;IAFb;IACA;IACA;IA2CV,gBAAqB,IAAIL,QAAJ,EAArB;IACA,yBAAyC,EAAzC;IAMA,cAAiB,EAAjB;EAjDI;;EAEEM,QAAQ;IAAA;;IAAA;MACZ,IAAIC,aAAa,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAApB;MACA,KAAI,CAACC,iBAAL,SAA+B,KAAI,CAACN,UAAL,CAAgBO,wBAAhB,CAC7BJ,aAD6B,CAA/B;;MAGA,KAAI,CAACJ,cAAL,CACGS,gBADH,CACoBL,aADpB,EAEGM,SAFH,CAEcC,QAAD,IAAuB;QAChC,KAAI,CAACA,QAAL,GAAgBA,QAAhB;MACD,CAJH;IALY;EAUb;;EAEDC,cAAc;IACZ,IAAI,KAAKC,YAAL,IAAqB,KAAKF,QAAL,CAAcG,OAAvC,EAAgD;MAC9C,KAAK,MAAMC,UAAX,IAAyB,KAAKR,iBAA9B,EAAiD;QAC/C,IAAIQ,UAAU,CAACD,OAAX,IAAsB,KAAKD,YAA/B,EAA6C;UAC3C,IAAIE,UAAU,CAACC,WAAX,GAAyB,IAAIC,IAAJ,EAA7B,EAAyC;YACvC;UACD;QACF;MACF;;MACD,KAAKC,MAAL,GAAc,mCAAd;MACA;IACD,CAVD,MAUO,IAAI,KAAKC,WAAL,IAAoB,KAAKC,kBAA7B,EAAiD;MACtD,KAAKF,MAAL,GAAc,+BAAd;MACA;IACD,CAHM,MAGA,IAAI,KAAKC,WAAL,IAAoB,KAAKN,YAA7B,EAA2C;MAChD,KAAKK,MAAL,GAAc,yCAAd;MACA;IACD,CAHM,MAGA;MACL,KAAKlB,cAAL,CACGqB,eADH,CACmB,KAAKV,QAAL,CAAcP,aADjC,EACgD,KAAKe,WADrD,EAEGT,SAFH,CAEcY,GAAD,IAAQ;QACjBC,KAAK,CAAC,6BAAD,CAAL;QACAlB,cAAc,CAACmB,KAAf;QACA,KAAKtB,KAAL,CAAWuB,QAAX,CAAoB,CAAC,GAAD,CAApB;MACD,CANH;IAOD;EACF;;AA7CiC;;;mBAAvB3B,yBAAuB4B;AAAA;;;QAAvB5B;EAAuB6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZpCL;MAAIA;MAAeA;MAEnBA,8BAAO,CAAP,EAAO,IAAP,EAAO,CAAP,EAAO,IAAP;MAEYA;MAAaA;MACjBA,2BAAI,CAAJ,EAAI,OAAJ,EAAI,CAAJ;MAA2BA;QAAA;MAAA;MAAvBA;MAERA,2BAAI,CAAJ,EAAI,IAAJ;MACQA;MAAYA;MAChBA,4BAAI,EAAJ,EAAI,OAAJ,EAAI,CAAJ;MAA2BA;QAAA;MAAA;MAAvBA;MAERA,4BAAI,EAAJ,EAAI,IAAJ;MACQA;MAAoBA;MACxBA,4BAAI,EAAJ,EAAI,OAAJ,EAAI,CAAJ;MAA2BA;QAAA;MAAA;MAAvBA;MAERA,4BAAI,EAAJ,EAAI,IAAJ,EAAI,CAAJ,EAAI,EAAJ,EAAI,QAAJ,EAAI,CAAJ;MAEgBA;QAAA,OAASM,oBAAT;MAAyB,CAAzB;MAA2BN;MAAeA;MAI9DA;;;;MAhBmCA;MAAAA;MAIAA;MAAAA;MAIAA;MAAAA;MAQnCA;MAAAA","names":["Korisnik","PromenaLozinkeComponent","constructor","korisnikServis","mejlServis","ruter","ngOnInit","korisnickoIme","sessionStorage","getItem","privremeneLozinke","dohvatiPrivremeneLozinke","dohvatiKorisnika","subscribe","korisnik","promeniLozinku","staraLozinka","lozinka","privremena","vremeIsteka","Date","greska","novaLozinka","potvrdaNoveLozinke","azurirajLozinku","res","alert","clear","navigate","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\promena-lozinke\\promena-lozinke.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\promena-lozinke\\promena-lozinke.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { KorisnikService } from '../services/korisnik.service';\nimport { Korisnik } from '../models/korisnik';\nimport { PrivremenaLozinka } from '../models/privremenaLozinka';\nimport { MejlService } from '../services/mejl.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-promena-lozinke',\n  templateUrl: './promena-lozinke.component.html',\n  styleUrls: ['./promena-lozinke.component.css'],\n})\nexport class PromenaLozinkeComponent implements OnInit {\n  constructor(\n    private korisnikServis: KorisnikService,\n    private mejlServis: MejlService,\n    private ruter: Router\n  ) {}\n\n  async ngOnInit() {\n    let korisnickoIme = sessionStorage.getItem('korisnik');\n    this.privremeneLozinke = await this.mejlServis.dohvatiPrivremeneLozinke(\n      korisnickoIme\n    );\n    this.korisnikServis\n      .dohvatiKorisnika(korisnickoIme)\n      .subscribe((korisnik: Korisnik) => {\n        this.korisnik = korisnik;\n      });\n  }\n\n  promeniLozinku() {\n    if (this.staraLozinka != this.korisnik.lozinka) {\n      for (const privremena of this.privremeneLozinke) {\n        if (privremena.lozinka == this.staraLozinka) {\n          if (privremena.vremeIsteka < new Date()) {\n            break;\n          }\n        }\n      }\n      this.greska = 'Uneta stara lozinka nije ispravna';\n      return;\n    } else if (this.novaLozinka != this.potvrdaNoveLozinke) {\n      this.greska = 'Unete lozinke se ne poklapaju';\n      return;\n    } else if (this.novaLozinka == this.staraLozinka) {\n      this.greska = 'Nova lozinka ne sme biti ista kao stara';\n      return;\n    } else {\n      this.korisnikServis\n        .azurirajLozinku(this.korisnik.korisnickoIme, this.novaLozinka)\n        .subscribe((res) => {\n          alert('Lozinka uspesno promenjena!');\n          sessionStorage.clear();\n          this.ruter.navigate(['/']);\n        });\n    }\n  }\n\n  korisnik: Korisnik = new Korisnik();\n  privremeneLozinke: PrivremenaLozinka[] = [];\n\n  staraLozinka: string;\n  novaLozinka: string;\n  potvrdaNoveLozinke: string;\n\n  greska: string = '';\n}\n","<h3>Promena lozinke</h3>\n\n<table>\n    <tr>\n        <td>Stara lozinka</td>\n        <td><input type=\"password\" [(ngModel)]=\"staraLozinka\" /></td>\n    </tr>\n    <tr>\n        <td>Nova lozinka</td>\n        <td><input type=\"password\" [(ngModel)]=\"novaLozinka\" /></td>\n    </tr>\n    <tr>\n        <td>Potvrda nove lozinke</td>\n        <td><input type=\"password\" [(ngModel)]=\"potvrdaNoveLozinke\" /></td>\n    </tr>\n    <tr>\n        <td colspan=\"2\">\n            <button (click)=\"promeniLozinku()\">Promeni lozinku</button>\n        </td>\n    </tr>\n</table>\n{{greska}}"]},"metadata":{},"sourceType":"module"}