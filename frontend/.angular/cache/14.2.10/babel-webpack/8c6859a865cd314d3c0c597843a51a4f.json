{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/objekat.service\";\nimport * as i2 from \"../services/skica.service\";\nimport * as i3 from \"../services/provera.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\n\nconst _c0 = function () {\n  return [\"/klijent/profil\"];\n};\n\nconst _c1 = function () {\n  return [\"/klijent/objekat\"];\n};\n\nconst _c2 = function () {\n  return [\"/klijent/agencije\"];\n};\n\nconst _c3 = function () {\n  return [\"/klijent/poslovi\"];\n};\n\nexport class ObjekatDodavanjeComponent {\n  constructor(objekatServis, skicaServis, proveraServis, ruter) {\n    this.objekatServis = objekatServis;\n    this.skicaServis = skicaServis;\n    this.proveraServis = proveraServis;\n    this.ruter = ruter;\n    this.tip = 'stan';\n    this.adresa = '';\n    this.brProstorija = 1;\n    this.kvadratura = 0;\n    this.greska = '';\n    this.koordinate = [];\n    this.dimenzije = [];\n    this.koordinateVrata = [];\n  }\n\n  ngOnInit() {}\n\n  dalje() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let proveraAdresa = yield _this.proveraServis.proveraUlica(_this.adresa);\n\n      if (proveraAdresa != 'ok') {\n        _this.greska = proveraAdresa;\n        return;\n      }\n\n      if (_this.kvadratura <= 0) {\n        _this.greska = 'Broj kvadrata mora biti pozitivan broj';\n        return;\n      }\n\n      sessionStorage.setItem('dodavanjeObjektaTip', _this.tip);\n      sessionStorage.setItem('dodavanjeObjektaAdresa', _this.adresa);\n      sessionStorage.setItem('dodavanjeObjektaBrProstorija', _this.brProstorija.toString());\n      sessionStorage.setItem('dodavanjeObjektaKvadratura', _this.kvadratura.toString());\n\n      _this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n    })();\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n\n        citac.onload = e => {\n          const sadrzajFajla = citac.result;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n        };\n\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n\n  dodajObjekat() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let proveraAdresa = yield _this2.proveraServis.proveraUlica(_this2.adresa);\n\n      if (proveraAdresa != 'ok') {\n        _this2.greska = proveraAdresa;\n        return;\n      }\n\n      if (_this2.kvadratura <= 0) {\n        _this2.greska = 'Broj kvadrata mora biti pozitivan broj';\n        return;\n      }\n\n      if (_this2.brProstorija <= 0) {\n        _this2.greska = 'Broj prostorija mora biti pozitivan broj';\n        return;\n      }\n\n      if (_this2.koordinate.length < _this2.brProstorija) {\n        _this2.greska = 'Nedovoljno koordinata';\n        return;\n      }\n\n      if (_this2.dimenzije.length < _this2.brProstorija) {\n        _this2.greska = 'Nedovoljno dimenzija';\n        return;\n      }\n\n      if (_this2.koordinateVrata.length < _this2.brProstorija) {\n        _this2.greska = 'Nedovoljno koordinata vrata';\n        return;\n      }\n\n      let boje = [];\n\n      for (let i = 0; i < _this2.koordinate.length; i++) {\n        boje.push('white');\n      }\n\n      _this2.skicaServis.ubaciSkicu(_this2.koordinate, _this2.dimenzije, boje, _this2.koordinateVrata).subscribe(skica => {\n        let id = skica._id;\n\n        _this2.objekatServis.dodajObjekat(_this2.tip, _this2.adresa, _this2.brProstorija, _this2.kvadratura, id, sessionStorage.getItem('korisnik')).subscribe(objekatId => {\n          alert('Uspešno ste dodali objekat!');\n\n          _this2.ruter.navigate(['/klijent/objekat']);\n        });\n      });\n    })();\n  }\n\n  odjava() {\n    sessionStorage.clear();\n    this.ruter.navigate(['/']);\n  }\n\n}\n\nObjekatDodavanjeComponent.ɵfac = function ObjekatDodavanjeComponent_Factory(t) {\n  return new (t || ObjekatDodavanjeComponent)(i0.ɵɵdirectiveInject(i1.ObjekatService), i0.ɵɵdirectiveInject(i2.SkicaService), i0.ɵɵdirectiveInject(i3.ProveraService), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nObjekatDodavanjeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ObjekatDodavanjeComponent,\n  selectors: [[\"app-objekat-dodavanje\"]],\n  decls: 51,\n  vars: 13,\n  consts: [[3, \"routerLink\"], [3, \"click\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"stan\"], [\"value\", \"kuca\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"colspan\", \"2\"], [\"type\", \"file\", 3, \"change\"]],\n  template: function ObjekatDodavanjeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵtext(1, \"Profil\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"a\", 0);\n      i0.ɵɵtext(3, \"Objekat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"a\", 0);\n      i0.ɵɵtext(5, \"Agencije\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 0);\n      i0.ɵɵtext(7, \"Poslovi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_8_listener() {\n        return ctx.odjava();\n      });\n      i0.ɵɵtext(9, \"Odjavi se\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"table\")(11, \"tr\")(12, \"td\");\n      i0.ɵɵtext(13, \"Tip objekta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_14_listener($event) {\n        return ctx.tip = $event;\n      });\n      i0.ɵɵelementStart(15, \"option\", 3);\n      i0.ɵɵtext(16, \"stan\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 4);\n      i0.ɵɵtext(18, \"kuca\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tr\")(20, \"td\");\n      i0.ɵɵtext(21, \"Adresa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"td\")(23, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.adresa = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tr\")(25, \"td\");\n      i0.ɵɵtext(26, \"Broj prostorija\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"td\")(28, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_28_listener($event) {\n        return ctx.brProstorija = $event;\n      });\n      i0.ɵɵelementStart(29, \"option\", 6);\n      i0.ɵɵtext(30, \"1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 7);\n      i0.ɵɵtext(32, \"2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\", 8);\n      i0.ɵɵtext(34, \"3\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(35, \"tr\")(36, \"td\");\n      i0.ɵɵtext(37, \"Broj kvadrata\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"td\")(39, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_39_listener($event) {\n        return ctx.kvadratura = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"tr\")(41, \"td\", 10)(42, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_42_listener() {\n        return ctx.dalje();\n      });\n      i0.ɵɵtext(43, \"Dalje\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(44, \"h1\");\n      i0.ɵɵtext(45, \"ILI\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \" Otpremi objekat u JSON formatu\\n\");\n      i0.ɵɵelementStart(47, \"input\", 11);\n      i0.ɵɵlistener(\"change\", function ObjekatDodavanjeComponent_Template_input_change_47_listener($event) {\n        return ctx.otpremanjeFajla($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_48_listener() {\n        return ctx.dodajObjekat();\n      });\n      i0.ɵɵtext(49, \"Dodaj objekat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c3));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.tip);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.adresa);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.brProstorija);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.kvadratura);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.greska, \"\");\n    }\n  },\n  dependencies: [i4.RouterLinkWithHref, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvYmpla2F0LWRvZGF2YW5qZS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ObjekatDodavanjeComponent","constructor","objekatServis","skicaServis","proveraServis","ruter","ngOnInit","dalje","proveraAdresa","proveraUlica","adresa","greska","kvadratura","sessionStorage","setItem","tip","brProstorija","toString","navigate","otpremanjeFajla","fajl","target","files","type","citac","FileReader","onload","e","sadrzajFajla","result","jsonFormat","JSON","parse","koordinate","dimenzije","koordinateVrata","readAsText","dodajObjekat","length","boje","i","push","ubaciSkicu","subscribe","skica","id","_id","getItem","objekatId","alert","odjava","clear","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Koordinata } from '../models/koordinata';\nimport { Dimenzije } from '../models/dimenzije';\nimport { SkicaService } from '../services/skica.service';\nimport { ObjekatService } from '../services/objekat.service';\nimport { Skica } from '../models/skica';\nimport { ProveraService } from '../services/provera.service';\n\n@Component({\n  selector: 'app-objekat-dodavanje',\n  templateUrl: './objekat-dodavanje.component.html',\n  styleUrls: ['./objekat-dodavanje.component.css'],\n})\nexport class ObjekatDodavanjeComponent implements OnInit {\n  constructor(\n    private objekatServis: ObjekatService,\n    private skicaServis: SkicaService,\n    private proveraServis: ProveraService,\n    private ruter: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  async dalje() {\n    let proveraAdresa = await this.proveraServis.proveraUlica(this.adresa);\n    if (proveraAdresa != 'ok') {\n      this.greska = proveraAdresa;\n      return;\n    }\n    if (this.kvadratura <= 0) {\n      this.greska = 'Broj kvadrata mora biti pozitivan broj';\n      return;\n    }\n    sessionStorage.setItem('dodavanjeObjektaTip', this.tip);\n    sessionStorage.setItem('dodavanjeObjektaAdresa', this.adresa);\n    sessionStorage.setItem(\n      'dodavanjeObjektaBrProstorija',\n      this.brProstorija.toString()\n    );\n    sessionStorage.setItem(\n      'dodavanjeObjektaKvadratura',\n      this.kvadratura.toString()\n    );\n    this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n        citac.onload = (e: any) => {\n          const sadrzajFajla = citac.result as string;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n        };\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n  async dodajObjekat() {\n    let proveraAdresa = await this.proveraServis.proveraUlica(this.adresa);\n    if (proveraAdresa != 'ok') {\n      this.greska = proveraAdresa;\n      return;\n    }\n    if (this.kvadratura <= 0) {\n      this.greska = 'Broj kvadrata mora biti pozitivan broj';\n      return;\n    }\n    if (this.brProstorija <= 0) {\n      this.greska = 'Broj prostorija mora biti pozitivan broj';\n      return;\n    }\n    if (this.koordinate.length < this.brProstorija) {\n      this.greska = 'Nedovoljno koordinata';\n      return;\n    }\n    if (this.dimenzije.length < this.brProstorija) {\n      this.greska = 'Nedovoljno dimenzija';\n      return;\n    }\n    if (this.koordinateVrata.length < this.brProstorija) {\n      this.greska = 'Nedovoljno koordinata vrata';\n      return;\n    }\n    let boje = [];\n    for (let i = 0; i < this.koordinate.length; i++) {\n      boje.push('white');\n    }\n    this.skicaServis\n      .ubaciSkicu(this.koordinate, this.dimenzije, boje, this.koordinateVrata)\n      .subscribe((skica: Skica) => {\n        let id = skica._id;\n        this.objekatServis\n          .dodajObjekat(\n            this.tip,\n            this.adresa,\n            this.brProstorija,\n            this.kvadratura,\n            id,\n            sessionStorage.getItem('korisnik')\n          )\n          .subscribe((objekatId) => {\n            alert('Uspešno ste dodali objekat!');\n            this.ruter.navigate(['/klijent/objekat']);\n          });\n      });\n  }\n\n  odjava() {\n    sessionStorage.clear();\n    this.ruter.navigate(['/']);\n  }\n\n  tip: string = 'stan';\n  adresa: string = '';\n  brProstorija: number = 1;\n  kvadratura: number = 0;\n  greska = '';\n\n  koordinate: Koordinata[] = [];\n  dimenzije: Dimenzije[] = [];\n  koordinateVrata: Koordinata[] = [];\n}\n","<a [routerLink]=\"['/klijent/profil']\">Profil</a> \n<a [routerLink]=\"['/klijent/objekat']\">Objekat</a> \n<a [routerLink]=\"['/klijent/agencije']\">Agencije</a> \n<a [routerLink]=\"['/klijent/poslovi']\">Poslovi</a> \n<button (click)=\"odjava()\">Odjavi se</button>\n\n<table>\n    <tr>\n        <td>Tip objekta</td>\n        <select [(ngModel)]=\"tip\">\n            <option value=\"stan\">stan</option>\n            <option value=\"kuca\">kuca</option>\n        </select>\n    </tr>\n    <tr>\n        <td>Adresa</td>\n        <td><input type=\"text\" [(ngModel)]=\"adresa\"></td>\n    </tr>\n    <tr>\n        <td>Broj prostorija</td>\n        <td><select [(ngModel)]=\"brProstorija\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n        </select></td>\n    </tr>\n    <tr>\n        <td>Broj kvadrata</td>\n        <td><input type=\"number\" [(ngModel)]=\"kvadratura\"></td>\n    </tr>\n    <tr>\n        <td colspan=\"2\">\n            <button (click)=\"dalje()\">Dalje</button>\n        </td>\n    </tr>\n</table>\n\n<h1>ILI</h1>\n\nOtpremi objekat u JSON formatu\n<input type=\"file\" (change)=\"otpremanjeFajla($event)\">\n<button (click)=\"dodajObjekat()\">Dodaj objekat</button>\n{{greska}}"]},"metadata":{},"sourceType":"module"}