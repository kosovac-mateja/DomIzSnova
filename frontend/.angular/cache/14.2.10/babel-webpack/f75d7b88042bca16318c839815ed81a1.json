{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kosov/OneDrive/Dokumenti/UredjivanjeProstoraAPP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/objekat.service\";\nimport * as i2 from \"../services/skica.service\";\nimport * as i3 from \"../services/provera.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nexport class ObjekatDodavanjeComponent {\n  constructor(objekatServis, skicaServis, proveraServis, ruter) {\n    this.objekatServis = objekatServis;\n    this.skicaServis = skicaServis;\n    this.proveraServis = proveraServis;\n    this.ruter = ruter;\n    this.tip = 'stan';\n    this.adresa = '';\n    this.brProstorija = 1;\n    this.kvadratura = 0;\n    this.greska = '';\n    this.koordinate = [];\n    this.dimenzije = [];\n    this.koordinateVrata = [];\n  }\n\n  ngOnInit() {}\n\n  dalje() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let proveraAdresa = yield _this.proveraServis.proveraUlica(_this.adresa);\n\n      if (proveraAdresa != 'ok') {\n        _this.greska = proveraAdresa;\n        return;\n      }\n\n      if (_this.kvadratura <= 0) {\n        _this.greska = 'Broj kvadrata mora biti pozitivan broj';\n        return;\n      }\n\n      sessionStorage.setItem('dodavanjeObjektaTip', _this.tip);\n      sessionStorage.setItem('dodavanjeObjektaAdresa', _this.adresa);\n      sessionStorage.setItem('dodavanjeObjektaBrProstorija', _this.brProstorija.toString());\n      sessionStorage.setItem('dodavanjeObjektaKvadratura', _this.kvadratura.toString());\n\n      _this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n    })();\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n\n        citac.onload = e => {\n          const sadrzajFajla = citac.result;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n        };\n\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n\n  dodajObjekat() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let provera = yield _this2.proveraServis.proveraObjekatJSON(_this2.tip, _this2.adresa, _this2.brProstorija, _this2.kvadratura, _this2.koordinate, _this2.dimenzije, _this2.koordinateVrata);\n\n      if (provera != 'ok') {\n        _this2.greska = provera;\n        return;\n      }\n\n      let boje = [];\n\n      for (let i = 0; i < _this2.koordinate.length; i++) {\n        boje.push('white');\n      }\n\n      _this2.skicaServis.ubaciSkicu(_this2.koordinate, _this2.dimenzije, boje, _this2.koordinateVrata).subscribe(skica => {\n        let id = skica._id;\n\n        _this2.objekatServis.dodajObjekat(_this2.tip, _this2.adresa, _this2.brProstorija, _this2.kvadratura, id, sessionStorage.getItem('korisnik')).subscribe(objekatId => {\n          alert('Uspešno ste dodali objekat!');\n\n          _this2.ruter.navigate(['/klijent/objekat']);\n        });\n      });\n    })();\n  }\n\n  odjava() {\n    sessionStorage.clear();\n    this.ruter.navigate(['/']);\n  }\n\n}\n\nObjekatDodavanjeComponent.ɵfac = function ObjekatDodavanjeComponent_Factory(t) {\n  return new (t || ObjekatDodavanjeComponent)(i0.ɵɵdirectiveInject(i1.ObjekatService), i0.ɵɵdirectiveInject(i2.SkicaService), i0.ɵɵdirectiveInject(i3.ProveraService), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nObjekatDodavanjeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ObjekatDodavanjeComponent,\n  selectors: [[\"app-objekat-dodavanje\"]],\n  decls: 51,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"table\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"stan\"], [\"value\", \"kuca\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"colspan\", \"2\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"for\", \"jsonFile\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"jsonFile\", 1, \"form-control\", 3, \"change\"], [1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"], [1, \"col-md-12\"]],\n  template: function ObjekatDodavanjeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3)(4, \"tr\")(5, \"td\");\n      i0.ɵɵtext(6, \"Tip objekta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"td\")(8, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.tip = $event;\n      });\n      i0.ɵɵelementStart(9, \"option\", 5);\n      i0.ɵɵtext(10, \"stan\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 6);\n      i0.ɵɵtext(12, \"kuca\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15, \"Adresa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\")(17, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.adresa = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tr\")(19, \"td\");\n      i0.ɵɵtext(20, \"Broj prostorija\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"td\")(22, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.brProstorija = $event;\n      });\n      i0.ɵɵelementStart(23, \"option\", 8);\n      i0.ɵɵtext(24, \"1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 9);\n      i0.ɵɵtext(26, \"2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 10);\n      i0.ɵɵtext(28, \"3\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(29, \"tr\")(30, \"td\");\n      i0.ɵɵtext(31, \"Broj kvadrata\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"td\")(33, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ObjekatDodavanjeComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.kvadratura = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"tr\")(35, \"td\", 12)(36, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_36_listener() {\n        return ctx.dalje();\n      });\n      i0.ɵɵtext(37, \"Dalje\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(38, \"h1\");\n      i0.ɵɵtext(39, \"ILI\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 1)(41, \"div\", 2)(42, \"label\", 14);\n      i0.ɵɵtext(43, \"Otpremi objekat u JSON formatu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"input\", 15);\n      i0.ɵɵlistener(\"change\", function ObjekatDodavanjeComponent_Template_input_change_44_listener($event) {\n        return ctx.otpremanjeFajla($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function ObjekatDodavanjeComponent_Template_button_click_45_listener() {\n        return ctx.dodajObjekat();\n      });\n      i0.ɵɵtext(46, \"Dodaj objekat\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 1)(48, \"div\", 17)(49, \"p\");\n      i0.ɵɵtext(50);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.tip);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.adresa);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.brProstorija);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.kvadratura);\n      i0.ɵɵadvance(17);\n      i0.ɵɵtextInterpolate(ctx.greska);\n    }\n  },\n  dependencies: [i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n  \\r\\n  .table[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .btn-primary[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  h1[_ngcontent-%COMP%] {\\r\\n    margin: 20px 0;\\r\\n  }\\r\\n  \\r\\n  .form-label[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  .text-danger[_ngcontent-%COMP%] {\\r\\n    font-size: 14px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9iamVrYXQtZG9kYXZhbmplLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQiIsImZpbGUiOiJvYmpla2F0LWRvZGF2YW5qZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAudGFibGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tY29udHJvbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmJ0bi1wcmltYXJ5IHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGgxIHtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1sYWJlbCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAudGV4dC1kYW5nZXIge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ObjekatDodavanjeComponent","constructor","objekatServis","skicaServis","proveraServis","ruter","ngOnInit","dalje","proveraAdresa","proveraUlica","adresa","greska","kvadratura","sessionStorage","setItem","tip","brProstorija","toString","navigate","otpremanjeFajla","fajl","target","files","type","citac","FileReader","onload","e","sadrzajFajla","result","jsonFormat","JSON","parse","koordinate","dimenzije","koordinateVrata","readAsText","dodajObjekat","provera","proveraObjekatJSON","boje","i","length","push","ubaciSkicu","subscribe","skica","id","_id","getItem","objekatId","alert","odjava","clear","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.ts","C:\\Users\\kosov\\OneDrive\\Dokumenti\\UredjivanjeProstoraAPP\\frontend\\src\\app\\objekat-dodavanje\\objekat-dodavanje.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Koordinata } from '../models/koordinata';\nimport { Dimenzije } from '../models/dimenzije';\nimport { SkicaService } from '../services/skica.service';\nimport { ObjekatService } from '../services/objekat.service';\nimport { Skica } from '../models/skica';\nimport { ProveraService } from '../services/provera.service';\n\n@Component({\n  selector: 'app-objekat-dodavanje',\n  templateUrl: './objekat-dodavanje.component.html',\n  styleUrls: ['./objekat-dodavanje.component.css'],\n})\nexport class ObjekatDodavanjeComponent implements OnInit {\n  constructor(\n    private objekatServis: ObjekatService,\n    private skicaServis: SkicaService,\n    private proveraServis: ProveraService,\n    private ruter: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  async dalje() {\n    let proveraAdresa = await this.proveraServis.proveraUlica(this.adresa);\n    if (proveraAdresa != 'ok') {\n      this.greska = proveraAdresa;\n      return;\n    }\n    if (this.kvadratura <= 0) {\n      this.greska = 'Broj kvadrata mora biti pozitivan broj';\n      return;\n    }\n    sessionStorage.setItem('dodavanjeObjektaTip', this.tip);\n    sessionStorage.setItem('dodavanjeObjektaAdresa', this.adresa);\n    sessionStorage.setItem(\n      'dodavanjeObjektaBrProstorija',\n      this.brProstorija.toString()\n    );\n    sessionStorage.setItem(\n      'dodavanjeObjektaKvadratura',\n      this.kvadratura.toString()\n    );\n    this.ruter.navigate(['/klijent/dodajObjekat/skica']);\n  }\n\n  otpremanjeFajla(fajl) {\n    if (fajl.target.files[0]) {\n      if (fajl.target.files[0].type == 'application/json') {\n        const citac = new FileReader();\n        citac.onload = (e: any) => {\n          const sadrzajFajla = citac.result as string;\n          const jsonFormat = JSON.parse(sadrzajFajla);\n          this.greska = '';\n          this.tip = jsonFormat.tip;\n          this.adresa = jsonFormat.adresa;\n          this.brProstorija = jsonFormat.brProstorija;\n          this.kvadratura = jsonFormat.kvadratura;\n          this.koordinate = jsonFormat.koordinate;\n          this.dimenzije = jsonFormat.dimenzije;\n          this.koordinateVrata = jsonFormat.koordinateVrata;\n        };\n        citac.readAsText(fajl.target.files[0]);\n      } else {\n        this.greska = 'Fajl mora biti u JSON formatu';\n      }\n    }\n  }\n\n  async dodajObjekat() {\n    let provera = await this.proveraServis.proveraObjekatJSON(\n      this.tip,\n      this.adresa,\n      this.brProstorija,\n      this.kvadratura,\n      this.koordinate,\n      this.dimenzije,\n      this.koordinateVrata\n    );\n    if (provera != 'ok') {\n      this.greska = provera;\n      return;\n    }\n    let boje = [];\n    for (let i = 0; i < this.koordinate.length; i++) {\n      boje.push('white');\n    }\n    this.skicaServis\n      .ubaciSkicu(this.koordinate, this.dimenzije, boje, this.koordinateVrata)\n      .subscribe((skica: Skica) => {\n        let id = skica._id;\n        this.objekatServis\n          .dodajObjekat(\n            this.tip,\n            this.adresa,\n            this.brProstorija,\n            this.kvadratura,\n            id,\n            sessionStorage.getItem('korisnik')\n          )\n          .subscribe((objekatId) => {\n            alert('Uspešno ste dodali objekat!');\n            this.ruter.navigate(['/klijent/objekat']);\n          });\n      });\n  }\n\n  odjava() {\n    sessionStorage.clear();\n    this.ruter.navigate(['/']);\n  }\n\n  tip: string = 'stan';\n  adresa: string = '';\n  brProstorija: number = 1;\n  kvadratura: number = 0;\n  greska = '';\n\n  koordinate: Koordinata[] = [];\n  dimenzije: Dimenzije[] = [];\n  koordinateVrata: Koordinata[] = [];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <table class=\"table\">\n          <tr>\n            <td>Tip objekta</td>\n            <td>\n              <select class=\"form-select\" [(ngModel)]=\"tip\">\n                <option value=\"stan\">stan</option>\n                <option value=\"kuca\">kuca</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td>Adresa</td>\n            <td><input type=\"text\" class=\"form-control\" [(ngModel)]=\"adresa\"></td>\n          </tr>\n          <tr>\n            <td>Broj prostorija</td>\n            <td>\n              <select class=\"form-select\" [(ngModel)]=\"brProstorija\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td>Broj kvadrata</td>\n            <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"kvadratura\"></td>\n          </tr>\n          <tr>\n            <td colspan=\"2\">\n              <button class=\"btn btn-primary\" (click)=\"dalje()\">Dalje</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  \n    <h1>ILI</h1>\n  \n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <label for=\"jsonFile\" class=\"form-label\">Otpremi objekat u JSON formatu</label>\n        <input type=\"file\" id=\"jsonFile\" (change)=\"otpremanjeFajla($event)\" class=\"form-control\">\n        <button class=\"btn btn-primary mt-2\" (click)=\"dodajObjekat()\">Dodaj objekat</button>\n      </div>\n    </div>\n  \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <p>{{ greska }}</p>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module"}